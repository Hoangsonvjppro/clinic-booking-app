version: '3.9'
services:
  # API Gateway
  api-gateway:
    build: ../api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - redis
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - clinic-network

  # COMPONENTS SERVER for API Gateway
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - clinic-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ../api-gateway/prometheus/prometheus-docker.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    networks:
      - clinic-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ../api-gateway/grafana/data:/var/lib/grafana
      - ../api-gateway/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ../api-gateway/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - clinic-network

  # AUTH SERVICE
  auth-service:
    build: ../auth-service
    ports:
      - "8081:8081"
    depends_on:
      postgres-auth:
        condition: service_healthy
    environment:
      DB_URL: jdbc:postgresql://postgres-auth:5432/clinic_auth
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      JAVA_TOOL_OPTIONS: >
        -Dspring.flyway.enabled=true
        -Dspring.jpa.hibernate.ddl-auto=none
    networks:
      - clinic-network

  # POSTGRES for AUTH
  postgres-auth:
    image: postgres:16
    environment:
      POSTGRES_DB: clinic_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d clinic_auth" ]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5433:5432"
    volumes:
      - pgdata_auth:/var/lib/postgresql/data
    networks:
      - clinic-network

  # PATIENT SERVICE
  patient-service:
    build: ../patient-service
    depends_on:
      postgres-patient:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-patient:5432/clinic
      SPRING_DATASOURCE_USERNAME: clinic
      SPRING_DATASOURCE_PASSWORD: clinic
    ports:
      - "8082:8080"
    networks:
      - clinic-network

  # POSTGRES for PATIENT
  postgres-patient:
    image: postgres:16
    environment:
      POSTGRES_DB: clinic
      POSTGRES_USER: clinic
      POSTGRES_PASSWORD: clinic
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U clinic -d clinic" ]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata_patient:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - clinic-network

  # APPOINTMENT SERVICE
  appointment-service:
    build: ../appointment-service
    depends_on:
      postgres-appointment:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-appointment:5432/clinic_appointment
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      PATIENT_SERVICE_BASE_URL: http://host.docker.internal:8081
      DOCTOR_SERVICE_BASE_URL: http://host.docker.internal:8082
      NOTIFICATION_SERVICE_BASE_URL: http://host.docker.internal:8085
      APPOINTMENT_CANCELLATION_CUTOFF_HOURS: 24
    ports:
      - "8084:8084"
    networks:
      - clinic-network

  # POSTGRES for APPOINTMENT
  postgres-appointment:
    image: postgres:16
    environment:
      POSTGRES_DB: clinic_appointment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d clinic_appointment" ]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata_appointment:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - clinic-network

networks:
  clinic-network:
    driver: bridge

volumes:
  pgdata_auth:
  pgdata_patient:
  pgdata_appointment: