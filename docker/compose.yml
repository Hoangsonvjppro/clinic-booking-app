version: '3.9'
services:
  # API Gateway
  api-gateway:
    build: ../api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - redis
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
    networks:
      - clinic-network

  # AUTH SERVICE
  auth-service:
    build: ../auth-service
    ports:
      - "8081:8081"
    depends_on:
      postgres-auth:
        condition: service_healthy
    environment:
      DB_URL: jdbc:postgresql://postgres-auth:5432/clinic_auth
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      JAVA_TOOL_OPTIONS: >
        -Dspring.flyway.enabled=true
        -Dspring.jpa.hibernate.ddl-auto=none
    networks:
      - clinic-network

  # POSTGRES for AUTH
  postgres-auth:
    image: postgres:16
    environment:
      POSTGRES_DB: clinic_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d clinic_auth" ]
      interval: 5s
      timeout: 3s
      retries: 10
    ports:
      - "5433:5432"
    volumes:
      - pgdata_auth:/var/lib/postgresql/data
    networks:
      - clinic-network

  # REDIS SERVER for API Gateway
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - clinic-network

networks:
  clinic-network:
    driver: bridge

volumes:
  pgdata_auth: